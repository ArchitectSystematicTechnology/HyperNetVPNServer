---

menshen:
  scheduling_group: backend
  num_instances: 1
  monitoring_endpoints:
    - job_name: menshen
      port: 9002
      scheme: http
  containers:
    - name: menshen
      image: registry.0xacab.org/leap/menshen:latest
      port: 9001
      volumes:
        - /var/lib/GeoIP: /var/lib/GeoIP/
      env:
        MENSHEN_API: "{{ menshen_api | default('https://api.{{ domain_public[0] }}') }}"
        INSECURE_API: "{{ testing | lower }}"
  public_endpoints:
    - name: menshen
      port: 9001
      scheme: http
      autoconfig: false
      skip_acme: true

openvpn:
  scheduling_group: gateway
  num_instances: all
  monitoring_endpoints:
    - job_name: openvpn
      port: 9176
      scheme: http
    - job_name: knot-resolver
      port: 8453
      scheme: http
  containers:
    - name: openvpn
      image: registry.0xacab.org/leap/container-platform/openvpn:bullseye
      ports: [80, 443, 53]
      drop_capabilities: false
      docker_options: '--cap-add=NET_ADMIN --cap-add=CAP_NET_BIND_SERVICE'
      volumes:
        - /etc/leap: /etc/leap
        - /etc/credentials/sspki: /etc/credentials/sspki
        - /srv/leap/shapeshifter-state: /srv/leap/shapeshifter-state
        - /srv/leap/dns-cache: /var/cache/knot-resolver
        - /etc/openvpn: /etc/openvpn
        - /dev/net: /dev/net
        - /etc/knot-resolver: /etc/knot-resolver
        - /var/lib/GeoIP: /var/lib/GeoIP/
      env:
        # Shapeshifter specific environment variables
        LHOST: "::"
        RHOST: "{{ ips | ansible.netcommon.ipv4 | first }}"
        RPORT: '80'
        OBFSPORT: '443'
        EXTORPORT: '3334'
        _CHAP_OPTIONS: --no-syslog
        LOGLEVEL: DEBUG
        # to try and get stability of socket name
        SYSTEMD_INSTANCE: 1

vpnweb:
  scheduling_group: backend
  num_instances: 1
  monitoring_endpoints:
    - job_name: vpnweb
      port: 8001
      scheme: http
  containers:
    - name: vpnweb
      image: registry.0xacab.org/leap/vpnweb:1-0
      port: 8000
      volumes:
        - /etc/leap: /etc/leap
      env:
        VPNWEB_API_PATH: /etc/leap/config/vpnweb
        VPNWEB_CACRT: /etc/leap/ca/client_ca.crt
        VPNWEB_CAKEY: /etc/leap/keys/client_ca.key
        VPNWEB_PROVIDER_CA: /etc/leap/ca/api_ca.crt
        VPNWEB_AUTH: "{{ vpnweb_auth | default('anon') }}"
        VPNWEB_SIP_USER: "{{ vpnweb_sip_user | default('') }}"
        VPNWEB_SIP_PASS: "{{ vpnweb_sip_password | default('') }}"
        VPNWEB_AUTH_SECRET: "{{ vpnweb_auth_secret | default('') }}"
        VPNWEB_SIP_HOST: "{{ vpnweb_sip_host | default('') }}"
        VPNWEB_SIP_PORT: "{{ vpnweb_sip_port | default('') }}"
        VPNWEB_SIP_LIBR_LOCATION: "{{ vpnweb_sip_location | default('') }}"
        VPNWEB_SIP_TERMINATOR: "{{ vpnweb_sip_terminator | default('') }}"
        VPNWEB_PASSWORD_POLICY: "{{ vpnweb_password_policy | default('') }}"
  public_endpoints:
    - name: api
      port: 8000
      scheme: http
      domains: "{{ custom_vpn_web_domains | default(['api.' + domain_public[0]]) }}"

provider:
  scheduling_group: backend
  num_instances: 1
  containers:
    - name: provider
      image: registry.0xacab.org/leap/container-platform/static-content:main
      volumes:
        - /etc/leap/config/vpnweb: /var/www
      env:
        ADDR: ":8080"
  public_endpoints:
    - name: provider
      port: 8080
      scheme: http
      domains:
        - "{{ domain_public[0] }}"

obfsvpn:
  scheduling_group: bridge
  num_instances: all
  containers:
    - name: obfsvpn
      image: registry.0xacab.org/leap/obfsvpn:server-main

      # This is how float handles providing a "command" ðŸ™ƒ
      args: /opt/obfsvpn/start_obfsvpn.sh
      ports: [443]
      drop_capabilities: false
      docker_options: '--cap-add=NET_ADMIN --cap-add=CAP_NET_BIND_SERVICE'
      volumes:
        - /opt/obfsvpn/data: /opt/obfsvpn/data
        - /dev/net: /dev/net
      env:
        # non-hopping:
        PROTO: "tcp"
        KCP: "0"
        OBFS4_HOST: "0.0.0.0"
        OPENVPN_HOST: "{{ gateway | default(groups['gateway'][0]) }}"
        OPENVPN_PORT: "80"
        HOP_PT: "0"
        OBFS4_DATA_DIR: /opt/obfsvpn/data
        OBFS4_KEY_FILE: /opt/obfsvpn/data/obfs4_state.json
        # necessary for traditional/non-hopping mode
        OBFS4_PORT: "443"
        LOGLEVEL: DEBUG

