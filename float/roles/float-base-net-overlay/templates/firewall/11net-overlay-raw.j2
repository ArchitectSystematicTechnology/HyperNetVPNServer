{% macro allow_host_ips(h, chain) %}
{% for ip in hostvars[h]['ips'] | ansible.netcommon.ipv4 | sort %}
add_rule4 -A {{ chain }} -s {{ ip }} -j CT --notrack
{% endfor %}
{% for ip in hostvars[h]['ips'] | ansible.netcommon.ipv6 | sort %}
add_rule6 -A {{ chain }} -s {{ ip }} -j CT --notrack
{% endfor %}
{% endmacro %}

# Allow peer nodes to communicate with our tinc daemon.
create_chain allow-vpn-{{ tinc_net }}
{% for h in groups['overlay_' + tinc_net]|sort %}
{% if h != inventory_hostname %}
{{ allow_host_ips(h, 'allow-vpn-' + tinc_net) }}
{% endif %}
{% endfor %}

{% for n in net_overlays %}
{% if n.name == tinc_net %}
add_rule -A PREROUTING -p tcp --dport {{ n.get('port', '655') }} -j allow-vpn-{{ tinc_net }}
add_rule -A OUTPUT -p tcp --sport {{ n.get('port', '655') }} -j CT --notrack
add_rule -A PREROUTING -p udp --dport {{ n.get('port', '655') }} -j allow-vpn-{{ tinc_net }}
add_rule -A OUTPUT -p udp --sport {{ n.get('port', '655') }} -j CT --notrack
{% endif %}
{% endfor %}
