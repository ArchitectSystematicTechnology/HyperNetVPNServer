local ffi = require('ffi')
local id = os.getenv('SYSTEMD_INSTANCE')
if not id then
        log_warn(ffi.C.LOG_GRP_SYSTEM, 'environment variable $SYSTEMD_INSTANCE not set')
else
        -- Bind to control socket in run_dir
        worker.control_path = '/run/control/'
        local path = worker.control_path..id
        local ok, err = pcall(net.listen, path, nil, { kind = 'control' })
        if not ok then
                log_warn(ffi.C.LOG_GRP_NETWORK, 'bind to '..path..' failed '..err)
        end
end

-- Set cache location
rawset(cache, 'current_storage', 'lmdb:///var/cache/knot-resolver')


net.listen('10.41.0.1', 53, { kind = 'dns' })
net.listen('10.42.0.1', 53, { kind = 'dns' })
{% if openvpn_udp_network6 is defined and openvpn_udp_network6|length %}
net.listen('::1', 53, { kind = 'dns' })
{% endif %}
net.listen('{{ansible_vpn0.ipv4.address}}', 8453, { kind = 'webmgmt' })

-- Load Useful modules
modules = {
	'stats',    -- Track internal statistics
	'http',
}

cache.size = 400 * MB

trust_anchors.add_file('/etc/knot-resolver/root.keys', false)
http.config({ geoip = '/var/lib/GeoIP/GeoLite2-Country.mmdb', })
