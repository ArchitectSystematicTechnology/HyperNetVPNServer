# Allow incoming connections to port 1194 for both udp and tcp
add_rule4 -A user-input -p tcp -m tcp -d {{ gateway_address }} --dport 1194 -j ACCEPT
add_rule4 -A user-input -p udp -m udp -d  {{ gateway_address }} --dport 1194 -j ACCEPT
{% if openvpn_network6 is defined and openvpn_network6|length -%}
add_rule6 -A user-input -p tcp -m tcp -d  {{ gateway_address6 }} --dport 1194 -j ACCEPT
add_rule6 -A user-input -p udp -m udp -d  {{ gateway_address6 }} --dport 1194 -j ACCEPT
{%- endif %}

# there is nothing special with regard to networking here, openvpn is just a process
# iptables by default in float prevents us from forwarding packets (DROP policy on FORWARD)
# so we need something in the FORWARD table that says "allow packets to / from this vpn"
#
# let ipv4 vpn hosts reach the internet
add_rule4 -A FORWARD -s {{ openvpn_network | ipaddr('network/prefix') }} -o {{ ansible_default_ipv4.interface }} -j ACCEPT
# allow re/established *inbound* to vpn hosts
add_rule4 -A FORWARD -d {{ openvpn_network | ipaddr('network/prefix') }} -m state --state RELATED,ESTABLISHED -j ACCEPT
{% if openvpn_network6 is defined and openvpn_network6|length -%}
# let ipv6 vpn hosts reach the internet
add_rule6 -A FORWARD -s {{ openvpn_network6 }} -o tun0 -j ACCEPT
# allow re/established *inbound* to vpn gateways
add_rule6 -A FORWARD -d {{ openvpn_network6 }} -m state --state RELATED,ESTABLISHED -j ACCEPT
{%- endif %}
# deny client-to-client communication
add_rule4 -A FORWARD -i tun0 -o tun0 -j DROP

{% if openvpn_network6 is defined and openvpn_network6|length -%}
# deny client-to-client communication
add_rule6 -A FORWARD -i tun0 -o tun0 -j DROP
{%- endif %}

# allow vpn clients to resolve DNS (i.e. query knot-resolver)
add_rule -A user-input -i tun0 -p udp --dport 53 -j ACCEPT
add_rule -A user-input -i tun0 -p tcp --dport 53 -j ACCEPT
