---

# This package needs to be on hosts in order to generate the CSRs.
- name: Install x509ca package
  apt:
    name: x509ca
    state: present

# Get the list of currently known systemd service units. Unfortunately
# the systemd version in Debian Buster does not yet support --output
# to set a reasonable format, so we have to use 'awk'.
# This will be used to restart services only if they actually exist.
- name: List systemd service units
  shell: "systemctl list-units --no-legend --no-pager --full --type service | awk '{print $1}'"
  check_mode: no
  changed_when: false
  register: all_systemd_units

- set_fact:
    # Default CA name.
    default_ca_tag: "{{ ca_tag | default('x509') }}"
    # Get the credential names from the list of certs.
    credentials_names: "{{ credentials | map(attribute='credentials') | map(attribute='name') | unique | list }}"

- name: "Create service credentials group"
  group:
    name: "{{ item }}-credentials"
    system: true
  loop: "{{ credentials_names }}"

- name: "Create service credentials dirs"
  file:
    path: "/etc/credentials/{{ item.credentials.ca_tag | default(default_ca_tag) }}/{{ item.credentials.name }}"
    state: directory
  loop: "{{ credentials }}"

- name: Copy CA
  copy:
    src: "{{ local_ca_path | default(credentials_dir + '/' + (item.credentials.ca_tag | default(default_ca_tag))) }}/ca.pem"
    dest: "/etc/credentials/{{ item.credentials.ca_tag | default(default_ca_tag) }}/{{ item.credentials.name }}/ca.pem"
    owner: root
    group: root
    mode: 0644
  loop: "{{ credentials }}"

# Create and sign all certificates in a series of loops (with some
# unfortunately complex change-detection logic).
- name: Set up internal PKI credentials
  block:

    - file:
        path: "/etc/credentials/{{ item.credentials.ca_tag | default(default_ca_tag) }}/{{ item.credentials.name }}/{{ item.mode }}"
        state: directory
      loop: "{{ credentials }}"

    - name: "Check the internal PKI certificates"
      x509_csr:
        credentials_name: "{{ item.credentials.name }}"
        domain: "{{ domain }}"
        mode: "{{ item.mode }}"
        params: "{{ item.x509_params|default({}) }}"
        private_key_path: "/etc/credentials/{{ item.credentials.ca_tag | default(default_ca_tag) }}/{{ item.credentials.name }}/{{ item.mode }}/private_key.pem"
        cert_path: "/etc/credentials/{{ item.credentials.ca_tag | default(default_ca_tag) }}/{{ item.credentials.name }}/{{ item.mode }}/cert.pem"
        ca_cert_path: "/etc/credentials/{{ item.credentials.ca_tag | default(default_ca_tag) }}/{{ item.credentials.name }}/ca.pem"
        check: true
      loop: "{{ credentials }}"
      check_mode: no
      register: x509_should_update

    # TODO: set the right permissions (credentials.name-credentials)
    - name: "Create internal PKI CSRs"
      x509_csr:
        credentials_name: "{{ item.0.credentials.name }}"
        domain: "{{ domain }}"
        mode: "{{ item.0.mode }}"
        params: "{{ item.0.x509_params|default({}) }}"
        private_key_path: "/etc/credentials/{{ item.0.credentials.ca_tag | default(default_ca_tag) }}/{{ item.0.credentials.name }}/{{ item.0.mode }}/private_key.pem"
        check: false
      when: "item.1.changed or (force_renew_credentials | default(False))"
      loop: "{{ credentials | zip(x509_should_update.results) | list }}"
      register: x509_csr

    - name: "Sign internal PKI certificates"
      x509_sign:
        csr: "{{ item.1.csr }}"
        mode: "{{ item.0.mode }}"
        ca_cert_path: "{{ local_ca_path | default(credentials_dir + '/' + (item.0.credentials.ca_tag | default(default_ca_tag))) }}/ca.pem"
        ca_key_path: "{{ local_ca_path | default(credentials_dir + '/' + (item.0.credentials.ca_tag | default(default_ca_tag))) }}/ca_private_key.pem"
      when: "item.1.changed"
      loop: "{{ credentials | zip(x509_csr.results) | list }}"
      register: x509_sign

    - name: "Install the signed internal PKI certificates"
      copy:
        dest: "/etc/credentials/{{ item.0.credentials.ca_tag | default(default_ca_tag) }}/{{ item.0.credentials.name }}/{{ item.0.mode }}/cert.pem"
        content: "{{ item.1.cert }}"
        mode: 0644
      when: "item.1.changed"
      loop: "{{ credentials | zip(x509_sign.results) | list }}"

    - name: "Set permissions on the private keys"
      file:
        path: "/etc/credentials/{{ item.credentials.ca_tag | default(default_ca_tag) }}/{{ item.credentials.name }}/{{ item.mode }}/private_key.pem"
        group: "{{ item.credentials.name }}-credentials"
        mode: 0640
      loop: "{{ credentials }}"

    # This should use the systemd module but it doesn't take lists of services.
    - name: "Restart associated services"
      shell: "systemctl try-reload-or-restart {{ all_systemd_units.stdout_lines | intersect(services[item.0.service].systemd_services) | join(' ') }}"
      when: "item.1.changed and item.0.service != 'LOCAL' and (all_systemd_units.stdout_lines | intersect(services[item.0.service].systemd_services))"
      loop: "{{ credentials | zip(x509_sign.results) | list }}"

  rescue:
    - debug:
        msg: "Failed to set up one or more credentials"
