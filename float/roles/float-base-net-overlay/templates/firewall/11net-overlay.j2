# Create a chain for traffic incoming over the private network {{ tinc_net }}.
create_chain vpn-{{ tinc_net }}-input
add_rule4 -A base-input -i {{ tinc_net }} -j vpn-{{ tinc_net }}-input

# Allow auth-server connections over the private network.
# TODO: not useful?
add_rule -A vpn-{{ tinc_net }}-input -p tcp --dport 9004 -j ACCEPT

# For each hosted service, allow traffic from internal services.
{% for s in float_enabled_services|sort %}
{% for port in services[s].get('ports', []) %}
add_rule -A vpn-{{ tinc_net }}-input -p tcp --dport {{ port }} -j ACCEPT
{% endfor %}
{% for ep in services[s].get('monitoring_endpoints', []) %}
add_rule -A vpn-{{ tinc_net }}-input -p tcp --dport {{ ep.port }} -j ACCEPT
{% endfor %}
{% for ep in services[s].get('public_endpoints', []) %}
add_rule -A vpn-{{ tinc_net }}-input -p tcp --dport {{ ep.port }} -j ACCEPT
{% endfor %}
{% for ep in services[s].get('public_tcp_endpoints', {}) %}
{% for port in ep.get('ports', []) %}
add_rule -A vpn-{{ tinc_net }}-input -p tcp --dport {{ port }} -j ACCEPT
{% endfor %}
{% if 'port' in ep %}
add_rule -A vpn-{{ tinc_net }}-input -p tcp --dport {{ ep.port }} -j ACCEPT
{% endif %}
{% endfor %}
{% endfor %}
