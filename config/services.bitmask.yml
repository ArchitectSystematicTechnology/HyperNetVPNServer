---

menshen:
  scheduling_group: backend
  num_instances: 1
  monitoring_endpoints:
    - job_name: menshen
      port: 9002
      scheme: http
  public_endpoints:
    - name: api
      port: 9001
      scheme: http
      domains: "{{ custom_menshen_web_domains | default(['api.' + domain_public[0]]) }}"
  containers:
    - name: menshen
      image: registry.0xacab.org/leap/menshen:1-3-0
      port: 9001
      volumes:
        - /var/lib/GeoIP: /var/lib/GeoIP/
        - /etc/leap: /etc/leap
        - /opt/menshen: /opt/menshen
      env:
        ENABLE_CERT_V3: true
        MENSHEN_PORT: 9001
        MENSHEN_METRICS_PORT: 9002
        MENSHEN_FROM_EIP_FILE: /etc/leap/config/3/config/eip-service.json
        MENSHEN_OVPN_CA_CRT: /etc/leap/ca/client_ca.crt
        MENSHEN_OVPN_CA_KEY: /etc/leap/keys/client_ca.key
        MENSHEN_CA_FILE: /etc/leap/ca/api_ca.crt
        MENSHEN_DB_FILE: /opt/menshen/sqlite.db
        MENSHEN_VERBOSE: true
        MENSHEN_AUTO_TLS: false
        MENSHEN_ALLOW_GATEWAY_LIST: true
        MENSHEN_ALLOW_BRIDGE_LIST: true

openvpn:
  scheduling_group: gateway
  num_instances: all
  monitoring_endpoints:
    - job_name: openvpn
      port: 9176
      scheme: http
    - job_name: knot-resolver
      port: 8453
      scheme: http
  containers:
    - name: openvpn
      image: registry.0xacab.org/leap/container-platform/openvpn:2-6-3-deb12
      ports: [80, 443, 53]
      drop_capabilities: false
      docker_options: '--cap-add=NET_ADMIN --cap-add=CAP_NET_BIND_SERVICE'
      volumes:
        - /etc/leap: /etc/leap
        - /etc/credentials/sspki: /etc/credentials/sspki
        - /srv/leap/shapeshifter-state: /srv/leap/shapeshifter-state
        - /srv/leap/dns-cache: /var/cache/knot-resolver
        - /etc/openvpn: /etc/openvpn
        - /dev/net: /dev/net
        - /etc/knot-resolver: /etc/knot-resolver
        - /var/lib/GeoIP: /var/lib/GeoIP/
      env:
        # Shapeshifter specific environment variables
        LHOST: "::"
        RHOST: "{{ ips | ansible.netcommon.ipv4 | first }}"
        RPORT: '80'
        OBFSPORT: '443'
        EXTORPORT: '3334'
        _CHAP_OPTIONS: --no-syslog
        LOGLEVEL: DEBUG
        # to try and get stability of socket name
        SYSTEMD_INSTANCE: 1

provider:
  scheduling_group: backend
  num_instances: 1
  containers:
    - name: provider
      image: registry.0xacab.org/leap/container-platform/static-content:main
      volumes:
        - /etc/leap/config: /var/www
      env:
        ADDR: ":8080"
  public_endpoints:
    - name: provider
      port: 8080
      scheme: http
      domains:
        - "{{ domain_public[0] }}"

obfsvpn:
  scheduling_group: bridge
  num_instances: all
  containers:
    - name: obfsvpn
      image: registry.0xacab.org/leap/obfsvpn:server-v1-2-0

      # This is how float handles providing a "command" ðŸ™ƒ
      args: /opt/obfsvpn/start_obfsvpn.sh
      ports: [443]
      drop_capabilities: false
      docker_options: '--cap-add=NET_ADMIN --cap-add=CAP_NET_BIND_SERVICE'
      volumes:
        - /opt/obfsvpn/data: /opt/obfsvpn/data
        - /dev/net: /dev/net
      env:
        # non-hopping:
        PROTO: "tcp"
        KCP: "0"
        OBFS4_HOST: "0.0.0.0"
        OBFS4_IP: "{{ ips | ansible.netcommon.ipv4 | first }}"
        # yamllint disable-line rule:line-length
        OBFSVPN_LOCATION: "{{ hostvars[inventory_hostname]['location'] | default('unknown') }}"
        OPENVPN_HOST: "{{ ips | ansible.netcommon.ipv4 | first }}"
        OPENVPN_PORT: "80"
        HOP_PT: "0"
        OBFS4_DATA_DIR: /opt/obfsvpn/data
        OBFS4_KEY_FILE: /opt/obfsvpn/data/obfs4_state.json
        # necessary for traditional/non-hopping mode
        OBFS4_PORT: "443"
        PERSIST_BRIDGE_STATE: "true"
        LOGLEVEL: DEBUG

obfsvpn-kcp:
  scheduling_group: bridge-kcp
  num_instances: all
  containers:
    - name: obfsvpn
      image: registry.0xacab.org/leap/obfsvpn:server-v1-2-0

      # This is how float handles providing a "command" ðŸ™ƒ
      args: /opt/obfsvpn/start_obfsvpn.sh
      ports: [4431]
      drop_capabilities: false
      docker_options: '--cap-add=NET_ADMIN --cap-add=CAP_NET_BIND_SERVICE'
      volumes:
        - /opt/obfsvpn/data: /opt/obfsvpn/data
        - /dev/net: /dev/net
      env:
        # non-hopping:
        KCP: "1"
        OBFS4_HOST: "0.0.0.0"
        OPENVPN_HOST: "{{ ips | ansible.netcommon.ipv4 | first }}"
        OPENVPN_PORT: "80"
        HOP_PT: "0"
        OBFS4_DATA_DIR: /opt/obfsvpn/data/kcp
        OBFS4_KEY_FILE: /opt/obfsvpn/data/obfs4_state.json
        OBFS4_IP: "{{ ips | ansible.netcommon.ipv4 | first }}"
        OBFSVPN_LOCATION: "{{ hostvars[inventory_hostname]['location'] | default('unknown') }}"
        OBFS4_PORT: "4431"
        CONTROL_PORT: "9091"
        PERSIST_BRIDGE_STATE: "true"
        LOGLEVEL: DEBUG

obfsvpn-introducer:
  scheduling_group: bridge-introducer
  num_instances: all
  containers:
    - name: obfsvpn
      image: registry.0xacab.org/leap/obfsvpn:server-v1-2-0
      args: /opt/obfsvpn/start_obfsvpn.sh
      ports: [443]
      drop_capabilities: false
      docker_options: '--cap-add=NET_ADMIN --cap-add=CAP_NET_BIND_SERVICE'
      volumes:
        - /opt/obfs4-introducer/: /opt/obfsvpn/data
        - /dev/net: /dev/net
      env:
        HOP_PT: "0"
        KCP: "0"
        TCP: "1"
        PROTO: "TCP"
        OBFS4_HOST: "0.0.0.0"
        # TODO : rename these var's for running in introducer mode(till then read it as REMOTE_HOST and REMOTE_PORT)
        OPENVPN_HOST: "{{ hostvars[inventory_hostname]['nginx_host'] | default('localhost') }}" 
        OPENVPN_PORT: "443"
        OBFS4_DATA_DIR: /tmp
        OBFS4_KEY_FILE: /opt/obfsvpn/data/obfs4_state.json
        OBFS4_IP: "{{ ips | ansible.netcommon.ipv4 | first }}"
        OBFSVPN_LOCATION: "{{ hostvars[inventory_hostname]['location'] | default('unknown') }}"
        OBFS4_PORT: "8080"
        CONTROL_PORT: "9091"
        PERSIST_BRIDGE_STATE: "true"
        LOGLEVEL: DEBUG