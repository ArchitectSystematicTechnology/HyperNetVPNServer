# Create a number of general-purpose chains to allow traffic from
# specific sets of hosts.

{% macro allow_host_ips(h, chain) %}
{% for ip in hostvars[h]['ips'] | ansible.netcommon.ipv4 | sort %}
add_rule4 -A {{ chain }} -s {{ ip }} -j ACCEPT
{% endfor %}
{% for ip in hostvars[h]['ips'] | ansible.netcommon.ipv6 | sort %}
add_rule6 -A {{ chain }} -s {{ ip }} -j ACCEPT
{% endfor %}
{% endmacro %}

{% macro create_chain_from_host_group(chain, group) %}
create_chain {{ chain }}
{% for h in groups.get(group, [])|sort %}
{% if h != inventory_hostname %}
{{ allow_host_ips(h, chain) }}
{% endif %}
{% endfor %}
{% endmacro %}

# Chain that allows traffic from all hosts in the inventory.
{{ create_chain_from_host_group('allow-cluster', 'all') }}
{% for port in float_enabled_services | map('extract', services) | selectattr('ports', 'defined') | map(attribute='ports') | flatten | sort %}
allow_port tcp {{ port }} -j allow-cluster
{% endfor %}

# Chain to allow traffic from hosts running monitoring probers.
{% if 'prometheus' in services %}
{{ create_chain_from_host_group('allow-monitoring', services['prometheus'].group_name) }}
{% for network_name in net_overlays | map(attribute='name') if hostvars[inventory_hostname].get('ip_' + network_name) %}
{% for host in services['prometheus'].hosts | sort if hostvars[host].get('ip_' + network_name) %}
add_rule4 -A allow-monitoring -s {{ hostvars[host]['ip_' + network_name] }} -j ACCEPT
{% endfor %}
{% endfor %}

# Allow traffic from monitoring probers to local services (on the
# public IP).
allow_port tcp 3909 -j allow-monitoring # cgroups-exporter
allow_port tcp 3903 -j allow-monitoring # mtail
allow_port tcp 9004 -j allow-monitoring # auth-server
allow_port tcp 9100 -j allow-monitoring # node-exporter
allow_port tcp 9106 -j allow-monitoring # rsyslog-exporter
allow_port tcp 9323 -j allow-monitoring # docker
allow_port tcp 5331 -j allow-monitoring # backup-agent (tabacco)
{% for port in float_enabled_services | map('extract', services) | selectattr('monitoring_endpoints', 'defined') | map(attribute='monitoring_endpoints') | flatten | map(attribute='port') | sort %}
allow_port tcp {{ port }} -j allow-monitoring
{% endfor %}
{% endif %}

{% if ssh_port != 22 %}
allow_port tcp {{ ssh_port }}
{% endif %}
