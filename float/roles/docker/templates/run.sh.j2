#!/bin/sh

{# Macro to generate command-line options #}
{% macro opt(name, value) %}
opts="$opts --{{ name }}={{ value }}"
{% endmacro %}

# Start the docker container for {{ service.name }}-{{ container.name }}.

# Include by default tmpfs mounts for standard Debian locations (/tmp,
# /run/lock), and a bind mount for the syslog socket in /dev/log.

opts="{{ container.docker_options | default('') }}"

{{ opt('network', 'host') }}

{# Port configuration, and bind mounts #}
{% if container.get('ports', []) %}
{% for port in container.get('ports',[]) %}{{ opt('expose', port) }}{% endfor %}
{% elif container.get('port') %}
{{ opt('expose', container.port) }}
{% endif %}
{{ opt('mount', 'type=tmpfs,destination=/tmp,tmpfs-mode=01777,tmpfs-size=64M') }}
{{ opt('mount', 'type=tmpfs,destination=/run/lock,tmpfs-mode=01777,tmpfs-size=64M') }}
{{ opt('mount', 'type=bind,source=/dev/log,destination=/dev/log') }}
{% for creds in service.get('service_credentials', []) %}
{{ opt('mount', 'type=bind,source=/etc/credentials/x509/' + creds.name + ',destination=/etc/credentials/x509/' + creds.name) }}
{% endfor %}
{% for mount in container.get('volumes', []) %}
{% for k, v in mount.items() %}
{{ opt('mount', 'type=bind,source=%s,destination=%s' % (k, v)) }}
{% endfor %}
{% endfor %}

{# Optionally mount the OpenCensus tracing config in the container #}
if [ -d /etc/tracing ]; then
  opts="$opts --mount=type=bind,source=/etc/tracing,destination=/etc/tracing"
fi

{# Security options (unless root=True) #}
{% if container.get('drop_capabilities', not container.get('root')) %}
opts="$opts --security-opt no-new-privileges --cap-drop all"
{% endif %}

{# User setup #}
{% if not container.get('root') %}
container_uid=$(id -u {{ container_user }})
container_gid=$(id -g {{ container_user }})
opts="$opts --user=$container_uid:$container_gid"
# Add additional groups that the user is a member of.
for gid in $(id -G {{ container_user }}); do
    if [ $gid -ne $container_gid ]; then
        opts="$opts --group-add=$gid"
    fi
done
{% endif %}

exec /usr/bin/systemd-docker --env run \
  --rm --name {{ service.name }}-{{ container.name }} \
  $opts \
  {{ container.image }} {{ container.get('args', '') }}
